import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: '–ü—É –ø—É –ø—É',
      theme: ThemeData(
        brightness: Brightness.light,
        colorScheme: ColorScheme.fromSeed(
          seedColor: Colors.deepPurple,
          brightness: Brightness.light,
        ),
        useMaterial3: true,
      ),
      darkTheme: ThemeData(
        brightness: Brightness.dark,
        colorScheme: ColorScheme.fromSeed(
          seedColor: Colors.deepPurple,
          brightness: Brightness.dark,
        ),
        useMaterial3: true,
      ),
      themeMode: ThemeMode.system,
      home: const MyHomePage(title: '–ü—É –ø—É –ø—É'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _currentValue = 0;
  final TextEditingController _controller = TextEditingController();

  void _processInput() {
    String input = _controller.text.trim();
    if (input.isEmpty) return;

    if (input.toLowerCase() == "–ª—é–±–ª—é –º–∞–º—É") {
      setState(() {
        _currentValue = 0;
      });
      _showMessage("üîÑ –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Å–∫–∏–Ω—É—Ç–æ!");
    } else {
      int? value = int.tryParse(input);
      if (value != null) {
        setState(() {
          _currentValue = value;
        });
      } else {
        _showMessage("‚ö†Ô∏è –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –∞–±–æ —Å–µ–∫—Ä–µ—Ç–Ω—É —Ñ—Ä–∞–∑—É –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è!");
      }
    }

    _controller.clear();
  }

  void _increment() {
    setState(() {
      _currentValue++;
    });
  }

  void _showMessage(String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text(message), duration: const Duration(seconds: 2)),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –±–∞–ª—ñ–≤ —è–∫—ñ –º–µ–Ω—ñ –º–∞—é—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç–∏:'),
            AnimatedSwitcher(
              duration: const Duration(milliseconds: 500),
              transitionBuilder: (child, animation) =>
                  ScaleTransition(scale: animation, child: child),
              child: Text(
                '$_currentValue',
                key: ValueKey<int>(_currentValue),
                style: Theme.of(context).textTheme.headlineMedium,
              ),
            ),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: TextField(
                controller: _controller,
                keyboardType: TextInputType.text,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: '–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤—ñ–¥ 100 –¥–æ —Å–∫—ñ–∫–æ —Ö–æ—á –∞–±–æ —Å–µ–∫—Ä–µ—Ç–Ω—É —Ñ—Ä–∞–∑—É)))',
                  filled: true,
                  fillColor: Colors.grey[200],
                ),
                onSubmitted: (_) => _processInput(),
              ),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                ElevatedButton(
                  onPressed: _processInput,
                  child: const Text('–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –º–æ—é —Ö–æ—Ä–æ—à—É –æ—Ü—ñ–Ω–∫—É'),
                ),
                const SizedBox(width: 16),
                ElevatedButton(
                  onPressed: _increment,
                  child: const Text('+1'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}